{"version":3,"sources":["webpack:///./node_modules/imaskjs/dist/imask.es.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA,kBAAkB,YAAY,EAAE;AAChC;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,CAAC;;AAED;AACA,6BAA6B;AAC7B,qCAAqC;AACrC,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,QAAQ,gBAAgB,UAAU,GAAG;AACtE,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,gBAAgB,UAAU,GAAG;AACrF,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,UAAU;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,wBAAwB;AAChH,sEAAsE;AACtE,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;;AAEA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA,sCAAsC;AACtC;AACA,8BAA8B;AAC9B,6BAA6B;AAC7B,+BAA+B;AAC/B,mCAAmC;AACnC,SAAS,+BAA+B;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB,EAAE;AACxD;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,WAAW,eAAe;AAC/B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA,oDAAoD,OAAO,EAAE;AAC7D;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAM;AACb;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AAQD;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,+CAA+C,qBAAqB;AACpE,2CAA2C,qBAAqB;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6CAA6C;AAC7C,6CAA6C;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC;AACpC;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA,2BAA2B,oBAAoB;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,+CAA+C;AAC3E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mEAAmE,iBAAiB;AACpF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+DAA+D,kDAAkD;AACjH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,2DAA2D,kBAAkB;AAC7E;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,+CAA+C;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,+CAA+C;AACnG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qCAAqC;AACrC;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;;AAGA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA,cAAc,EAAE,GAAG,EAAE;AACrB;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe,sEAAO,EAAC;AACvB","file":"vendor.js","sourcesContent":["function createCommonjsModule(fn, module) {\r\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\r\n}\r\n\r\nvar _global = createCommonjsModule(function (module) {\r\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\r\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\r\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\r\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\r\n});\r\n\r\nvar _core = createCommonjsModule(function (module) {\r\nvar core = module.exports = {version: '2.4.0'};\r\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\r\n});\r\n\r\nvar _isObject = function(it){\r\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\r\n};\r\n\r\nvar _anObject = function(it){\r\n  if(!_isObject(it))throw TypeError(it + ' is not an object!');\r\n  return it;\r\n};\r\n\r\nvar _fails = function(exec){\r\n  try {\r\n    return !!exec();\r\n  } catch(e){\r\n    return true;\r\n  }\r\n};\r\n\r\n// Thank's IE8 for his funny defineProperty\r\nvar _descriptors = !_fails(function(){\r\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\r\n});\r\n\r\nvar document$1 = _global.document;\r\nvar is = _isObject(document$1) && _isObject(document$1.createElement);\r\nvar _domCreate = function(it){\r\n  return is ? document$1.createElement(it) : {};\r\n};\r\n\r\nvar _ie8DomDefine = !_descriptors && !_fails(function(){\r\n  return Object.defineProperty(_domCreate('div'), 'a', {get: function(){ return 7; }}).a != 7;\r\n});\r\n\r\n// 7.1.1 ToPrimitive(input [, PreferredType])\r\n\r\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n// and the second argument - flag - preferred type is a string\r\nvar _toPrimitive = function(it, S){\r\n  if(!_isObject(it))return it;\r\n  var fn, val;\r\n  if(S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it)))return val;\r\n  if(typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it)))return val;\r\n  if(!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it)))return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};\r\n\r\nvar dP             = Object.defineProperty;\r\n\r\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes){\r\n  _anObject(O);\r\n  P = _toPrimitive(P, true);\r\n  _anObject(Attributes);\r\n  if(_ie8DomDefine)try {\r\n    return dP(O, P, Attributes);\r\n  } catch(e){ /* empty */ }\r\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\r\n  if('value' in Attributes)O[P] = Attributes.value;\r\n  return O;\r\n};\r\n\r\nvar _objectDp = {\r\n\tf: f\r\n};\r\n\r\nvar _propertyDesc = function(bitmap, value){\r\n  return {\r\n    enumerable  : !(bitmap & 1),\r\n    configurable: !(bitmap & 2),\r\n    writable    : !(bitmap & 4),\r\n    value       : value\r\n  };\r\n};\r\n\r\nvar _hide = _descriptors ? function(object, key, value){\r\n  return _objectDp.f(object, key, _propertyDesc(1, value));\r\n} : function(object, key, value){\r\n  object[key] = value;\r\n  return object;\r\n};\r\n\r\nvar hasOwnProperty = {}.hasOwnProperty;\r\nvar _has = function(it, key){\r\n  return hasOwnProperty.call(it, key);\r\n};\r\n\r\nvar id = 0;\r\nvar px = Math.random();\r\nvar _uid = function(key){\r\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\r\n};\r\n\r\nvar _redefine = createCommonjsModule(function (module) {\r\nvar SRC       = _uid('src')\r\n  , TO_STRING = 'toString'\r\n  , $toString = Function[TO_STRING]\r\n  , TPL       = ('' + $toString).split(TO_STRING);\r\n\r\n_core.inspectSource = function(it){\r\n  return $toString.call(it);\r\n};\r\n\r\n(module.exports = function(O, key, val, safe){\r\n  var isFunction = typeof val == 'function';\r\n  if(isFunction)_has(val, 'name') || _hide(val, 'name', key);\r\n  if(O[key] === val)return;\r\n  if(isFunction)_has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\r\n  if(O === _global){\r\n    O[key] = val;\r\n  } else {\r\n    if(!safe){\r\n      delete O[key];\r\n      _hide(O, key, val);\r\n    } else {\r\n      if(O[key])O[key] = val;\r\n      else _hide(O, key, val);\r\n    }\r\n  }\r\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\r\n})(Function.prototype, TO_STRING, function toString(){\r\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\r\n});\r\n});\r\n\r\nvar _aFunction = function(it){\r\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\r\n  return it;\r\n};\r\n\r\n// optional / simple context binding\r\n\r\nvar _ctx = function(fn, that, length){\r\n  _aFunction(fn);\r\n  if(that === undefined)return fn;\r\n  switch(length){\r\n    case 1: return function(a){\r\n      return fn.call(that, a);\r\n    };\r\n    case 2: return function(a, b){\r\n      return fn.call(that, a, b);\r\n    };\r\n    case 3: return function(a, b, c){\r\n      return fn.call(that, a, b, c);\r\n    };\r\n  }\r\n  return function(/* ...args */){\r\n    return fn.apply(that, arguments);\r\n  };\r\n};\r\n\r\nvar PROTOTYPE = 'prototype';\r\n\r\nvar $export = function(type, name, source){\r\n  var IS_FORCED = type & $export.F\r\n    , IS_GLOBAL = type & $export.G\r\n    , IS_STATIC = type & $export.S\r\n    , IS_PROTO  = type & $export.P\r\n    , IS_BIND   = type & $export.B\r\n    , target    = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE]\r\n    , exports   = IS_GLOBAL ? _core : _core[name] || (_core[name] = {})\r\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\r\n    , key, own, out, exp;\r\n  if(IS_GLOBAL)source = name;\r\n  for(key in source){\r\n    // contains in native\r\n    own = !IS_FORCED && target && target[key] !== undefined;\r\n    // export native or passed\r\n    out = (own ? target : source)[key];\r\n    // bind timers to global for call from export context\r\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\r\n    // extend global\r\n    if(target)_redefine(target, key, out, type & $export.U);\r\n    // export\r\n    if(exports[key] != out)_hide(exports, key, exp);\r\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\r\n  }\r\n};\r\n_global.core = _core;\r\n// type bitmap\r\n$export.F = 1;   // forced\r\n$export.G = 2;   // global\r\n$export.S = 4;   // static\r\n$export.P = 8;   // proto\r\n$export.B = 16;  // bind\r\n$export.W = 32;  // wrap\r\n$export.U = 64;  // safe\r\n$export.R = 128; // real proto method for `library` \r\nvar _export = $export;\r\n\r\nvar toString = {}.toString;\r\n\r\nvar _cof = function(it){\r\n  return toString.call(it).slice(8, -1);\r\n};\r\n\r\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\r\n\r\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function(it){\r\n  return _cof(it) == 'String' ? it.split('') : Object(it);\r\n};\r\n\r\n// 7.2.1 RequireObjectCoercible(argument)\r\nvar _defined = function(it){\r\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\r\n  return it;\r\n};\r\n\r\n// 7.1.13 ToObject(argument)\r\n\r\nvar _toObject = function(it){\r\n  return Object(_defined(it));\r\n};\r\n\r\n// 7.1.4 ToInteger\r\nvar ceil  = Math.ceil;\r\nvar floor = Math.floor;\r\nvar _toInteger = function(it){\r\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\r\n};\r\n\r\n// 7.1.15 ToLength\r\nvar min       = Math.min;\r\nvar _toLength = function(it){\r\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\r\n};\r\n\r\n// 7.2.2 IsArray(argument)\r\n\r\nvar _isArray = Array.isArray || function isArray(arg){\r\n  return _cof(arg) == 'Array';\r\n};\r\n\r\nvar SHARED = '__core-js_shared__';\r\nvar store  = _global[SHARED] || (_global[SHARED] = {});\r\nvar _shared = function(key){\r\n  return store[key] || (store[key] = {});\r\n};\r\n\r\nvar _wks = createCommonjsModule(function (module) {\r\nvar store      = _shared('wks')\r\n  , Symbol     = _global.Symbol\r\n  , USE_SYMBOL = typeof Symbol == 'function';\r\n\r\nvar $exports = module.exports = function(name){\r\n  return store[name] || (store[name] =\r\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\r\n};\r\n\r\n$exports.store = store;\r\n});\r\n\r\nvar SPECIES  = _wks('species');\r\n\r\nvar _arraySpeciesConstructor = function(original){\r\n  var C;\r\n  if(_isArray(original)){\r\n    C = original.constructor;\r\n    // cross-realm fallback\r\n    if(typeof C == 'function' && (C === Array || _isArray(C.prototype)))C = undefined;\r\n    if(_isObject(C)){\r\n      C = C[SPECIES];\r\n      if(C === null)C = undefined;\r\n    }\r\n  } return C === undefined ? Array : C;\r\n};\r\n\r\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\r\n\r\n\r\nvar _arraySpeciesCreate = function(original, length){\r\n  return new (_arraySpeciesConstructor(original))(length);\r\n};\r\n\r\n// 0 -> Array#forEach\r\n// 1 -> Array#map\r\n// 2 -> Array#filter\r\n// 3 -> Array#some\r\n// 4 -> Array#every\r\n// 5 -> Array#find\r\n// 6 -> Array#findIndex\r\n\r\nvar _arrayMethods = function(TYPE, $create){\r\n  var IS_MAP        = TYPE == 1\r\n    , IS_FILTER     = TYPE == 2\r\n    , IS_SOME       = TYPE == 3\r\n    , IS_EVERY      = TYPE == 4\r\n    , IS_FIND_INDEX = TYPE == 6\r\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\r\n    , create        = $create || _arraySpeciesCreate;\r\n  return function($this, callbackfn, that){\r\n    var O      = _toObject($this)\r\n      , self   = _iobject(O)\r\n      , f      = _ctx(callbackfn, that, 3)\r\n      , length = _toLength(self.length)\r\n      , index  = 0\r\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\r\n      , val, res;\r\n    for(;length > index; index++)if(NO_HOLES || index in self){\r\n      val = self[index];\r\n      res = f(val, index, O);\r\n      if(TYPE){\r\n        if(IS_MAP)result[index] = res;            // map\r\n        else if(res)switch(TYPE){\r\n          case 3: return true;                    // some\r\n          case 5: return val;                     // find\r\n          case 6: return index;                   // findIndex\r\n          case 2: result.push(val);               // filter\r\n        } else if(IS_EVERY)return false;          // every\r\n      }\r\n    }\r\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\r\n  };\r\n};\r\n\r\n// 22.1.3.31 Array.prototype[@@unscopables]\r\nvar UNSCOPABLES = _wks('unscopables');\r\nvar ArrayProto  = Array.prototype;\r\nif(ArrayProto[UNSCOPABLES] == undefined)_hide(ArrayProto, UNSCOPABLES, {});\r\nvar _addToUnscopables = function(key){\r\n  ArrayProto[UNSCOPABLES][key] = true;\r\n};\r\n\r\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\r\nvar $find   = _arrayMethods(5);\r\nvar KEY     = 'find';\r\nvar forced  = true;\r\n// Shouldn't skip holes\r\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\r\n_export(_export.P + _export.F * forced, 'Array', {\r\n  find: function find(callbackfn/*, that = undefined */){\r\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\r\n  }\r\n});\r\n_addToUnscopables(KEY);\r\n\r\n// to indexed object, toObject with fallback for non-array-like ES3 strings\r\n\r\nvar _toIobject = function(it){\r\n  return _iobject(_defined(it));\r\n};\r\n\r\nvar max       = Math.max;\r\nvar min$1       = Math.min;\r\nvar _toIndex = function(index, length){\r\n  index = _toInteger(index);\r\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\r\n};\r\n\r\n// false -> Array#indexOf\r\n// true  -> Array#includes\r\n\r\nvar _arrayIncludes = function(IS_INCLUDES){\r\n  return function($this, el, fromIndex){\r\n    var O      = _toIobject($this)\r\n      , length = _toLength(O.length)\r\n      , index  = _toIndex(fromIndex, length)\r\n      , value;\r\n    // Array#includes uses SameValueZero equality algorithm\r\n    if(IS_INCLUDES && el != el)while(length > index){\r\n      value = O[index++];\r\n      if(value != value)return true;\r\n    // Array#toIndex ignores holes, Array#includes - not\r\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\r\n      if(O[index] === el)return IS_INCLUDES || index || 0;\r\n    } return !IS_INCLUDES && -1;\r\n  };\r\n};\r\n\r\nvar shared = _shared('keys');\r\nvar _sharedKey = function(key){\r\n  return shared[key] || (shared[key] = _uid(key));\r\n};\r\n\r\nvar arrayIndexOf = _arrayIncludes(false);\r\nvar IE_PROTO     = _sharedKey('IE_PROTO');\r\n\r\nvar _objectKeysInternal = function(object, names){\r\n  var O      = _toIobject(object)\r\n    , i      = 0\r\n    , result = []\r\n    , key;\r\n  for(key in O)if(key != IE_PROTO)_has(O, key) && result.push(key);\r\n  // Don't enum bug & hidden keys\r\n  while(names.length > i)if(_has(O, key = names[i++])){\r\n    ~arrayIndexOf(result, key) || result.push(key);\r\n  }\r\n  return result;\r\n};\r\n\r\n// IE 8- don't enum bug keys\r\nvar _enumBugKeys = (\r\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\r\n).split(',');\r\n\r\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\r\n\r\n\r\nvar _objectKeys = Object.keys || function keys(O){\r\n  return _objectKeysInternal(O, _enumBugKeys);\r\n};\r\n\r\n// most Object methods by ES6 should accept primitives\r\n\r\nvar _objectSap = function(KEY, exec){\r\n  var fn  = (_core.Object || {})[KEY] || Object[KEY]\r\n    , exp = {};\r\n  exp[KEY] = exec(fn);\r\n  _export(_export.S + _export.F * _fails(function(){ fn(1); }), 'Object', exp);\r\n};\r\n\r\n// 19.1.2.14 Object.keys(O)\r\n\r\n\r\n_objectSap('keys', function(){\r\n  return function keys(it){\r\n    return _objectKeys(_toObject(it));\r\n  };\r\n});\r\n\r\nvar _stringRepeat = function repeat(count){\r\n  var str = String(_defined(this))\r\n    , res = ''\r\n    , n   = _toInteger(count);\r\n  if(n < 0 || n == Infinity)throw RangeError(\"Count can't be negative\");\r\n  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\r\n  return res;\r\n};\r\n\r\n_export(_export.P, 'String', {\r\n  // 21.1.3.13 String.prototype.repeat(count)\r\n  repeat: _stringRepeat\r\n});\r\n\r\n// https://github.com/tc39/proposal-string-pad-start-end\r\n\r\n\r\nvar _stringPad = function(that, maxLength, fillString, left){\r\n  var S            = String(_defined(that))\r\n    , stringLength = S.length\r\n    , fillStr      = fillString === undefined ? ' ' : String(fillString)\r\n    , intMaxLength = _toLength(maxLength);\r\n  if(intMaxLength <= stringLength || fillStr == '')return S;\r\n  var fillLen = intMaxLength - stringLength\r\n    , stringFiller = _stringRepeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\r\n  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\r\n  return left ? stringFiller + S : S + stringFiller;\r\n};\r\n\r\n// https://github.com/tc39/proposal-string-pad-start-end\r\n\r\n\r\n_export(_export.P, 'String', {\r\n  padStart: function padStart(maxLength /*, fillString = ' ' */){\r\n    return _stringPad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\r\n  }\r\n});\r\n\r\n// https://github.com/tc39/proposal-string-pad-start-end\r\n\r\n\r\n_export(_export.P, 'String', {\r\n  padEnd: function padEnd(maxLength /*, fillString = ' ' */){\r\n    return _stringPad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\r\n  }\r\n});\r\n\r\nfunction isString(str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nfunction conform(res, str) {\r\n  var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\r\n\r\n  return isString(res) ? res : res ? str : fallback;\r\n}\r\n\r\nvar DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n};\r\n\r\nfunction indexInDirection(pos, direction) {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\nfunction refreshValueOnSet(target, key, descriptor) {\r\n  var method = descriptor.set;\r\n  descriptor.set = function () {\r\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    return this.withValueRefresh(method.bind.apply(method, [this].concat(args)));\r\n  };\r\n}\r\n\r\nfunction escapeRegExp(str) {\r\n  return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\r\n}\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\nvar createClass = function () {\r\n  function defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, descriptor.key, descriptor);\r\n    }\r\n  }\r\n\r\n  return function (Constructor, protoProps, staticProps) {\r\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) defineProperties(Constructor, staticProps);\r\n    return Constructor;\r\n  };\r\n}();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar _extends = Object.assign || function (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n\r\n    for (var key in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\n\r\n\r\nvar inherits = function (subClass, superClass) {\r\n  if (typeof superClass !== \"function\" && superClass !== null) {\r\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\r\n  }\r\n\r\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar possibleConstructorReturn = function (self, call) {\r\n  if (!self) {\r\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n  }\r\n\r\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\r\n};\r\n\r\nvar _class;\r\n\r\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\r\n  var desc = {};\r\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\r\n    desc[key] = descriptor[key];\r\n  });\r\n  desc.enumerable = !!desc.enumerable;\r\n  desc.configurable = !!desc.configurable;\r\n\r\n  if ('value' in desc || desc.initializer) {\r\n    desc.writable = true;\r\n  }\r\n\r\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\r\n    return decorator(target, property, desc) || desc;\r\n  }, desc);\r\n\r\n  if (context && desc.initializer !== void 0) {\r\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\r\n    desc.initializer = undefined;\r\n  }\r\n\r\n  if (desc.initializer === void 0) {\r\n    Object['define' + 'Property'](target, property, desc);\r\n    desc = null;\r\n  }\r\n\r\n  return desc;\r\n}\r\n\r\nvar Masked = (_class = function () {\r\n  function Masked(_ref) {\r\n    var mask = _ref.mask,\r\n        _ref$prepare = _ref.prepare,\r\n        prepare = _ref$prepare === undefined ? function (val) {\r\n      return val;\r\n    } : _ref$prepare,\r\n        _ref$validate = _ref.validate,\r\n        validate = _ref$validate === undefined ? function () {\r\n      return true;\r\n    } : _ref$validate,\r\n        _ref$commit = _ref.commit,\r\n        commit = _ref$commit === undefined ? function () {} : _ref$commit;\r\n    classCallCheck(this, Masked);\r\n\r\n    this._value = '';\r\n    this.mask = mask;\r\n    this.prepare = prepare;\r\n    this.validate = validate;\r\n    this.commit = commit;\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  Masked.prototype.clone = function clone() {\r\n    var m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  };\r\n\r\n  Masked.prototype.reset = function reset() {\r\n    this._value = '';\r\n  };\r\n\r\n  Masked.prototype.nearestInputPos = function nearestInputPos(cursorPos) /* direction */{\r\n    return cursorPos;\r\n  };\r\n\r\n  Masked.prototype.extractInput = function extractInput() {\r\n    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n    return this.value.slice(fromPos, toPos);\r\n  };\r\n\r\n  Masked.prototype.extractTail = function extractTail() {\r\n    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n    return this.extractInput(fromPos, toPos);\r\n  };\r\n\r\n  Masked.prototype._appendTail = function _appendTail(tail) {\r\n    return !tail || this._append(tail);\r\n  };\r\n\r\n  Masked.prototype._append = function _append(str, soft) {\r\n    var oldValueLength = this.value.length;\r\n    var consistentValue = this.clone();\r\n\r\n    str = this.doPrepare(str, soft);\r\n    for (var ci = 0; ci < str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this.doValidate(soft) === false) {\r\n        _extends(this, consistentValue);\r\n        if (!soft) return false;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n  };\r\n\r\n  Masked.prototype.appendWithTail = function appendWithTail(str, tail) {\r\n    // TODO refactor\r\n    var appendCount = 0;\r\n    var consistentValue = this.clone();\r\n    var consistentAppended = void 0;\r\n\r\n    for (var ci = 0; ci < str.length; ++ci) {\r\n      var ch = str[ci];\r\n\r\n      var appended = this._append(ch, true);\r\n      consistentAppended = this.clone();\r\n      var tailAppended = appended !== false && this._appendTail(tail) !== false;\r\n      if (tailAppended === false || this.doValidate(true) === false) {\r\n        _extends(this, consistentValue);\r\n        break;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n      _extends(this, consistentAppended);\r\n      appendCount += appended;\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    // 3) when breaks on tail insert\r\n    this._appendTail(tail);\r\n\r\n    return appendCount;\r\n  };\r\n\r\n  Masked.prototype._unmask = function _unmask() {\r\n    return this.value;\r\n  };\r\n\r\n  // TODO rename - refactor\r\n\r\n\r\n  Masked.prototype.clear = function clear() {\r\n    var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n  };\r\n\r\n  Masked.prototype.withValueRefresh = function withValueRefresh(fn) {\r\n    if (this._refreshing) return fn();\r\n    this._refreshing = true;\r\n\r\n    var unmasked = this.isInitialized ? this.unmaskedValue : null;\r\n\r\n    var ret = fn();\r\n\r\n    if (unmasked != null) this.unmaskedValue = unmasked;\r\n\r\n    delete this._refreshing;\r\n    return ret;\r\n  };\r\n\r\n  Masked.prototype.doPrepare = function doPrepare(str, soft) {\r\n    return this.prepare(str, this, soft);\r\n  };\r\n\r\n  Masked.prototype.doValidate = function doValidate(soft) {\r\n    return this.validate(this.value, this, soft);\r\n  };\r\n\r\n  Masked.prototype.doCommit = function doCommit() {\r\n    this.commit(this.value, this);\r\n  };\r\n\r\n  // TODO\r\n  // resolve (inputRaw) -> outputRaw\r\n\r\n  // TODO\r\n  // insert (str, fromPos, soft)\r\n\r\n  // splice (start, deleteCount, inserted, removeDirection) {\r\n  //   const tailPos = start + deleteCount;\r\n  //   const tail = this.extractTail(tailPos);\r\n\r\n  //   start = this.nearestInputPos(start, removeDirection);\r\n  //   this.clear(start);\r\n  //   return this.appendWithTail(inserted, tail);\r\n  // }\r\n\r\n\r\n  createClass(Masked, [{\r\n    key: 'mask',\r\n    get: function get$$1() {\r\n      return this._mask;\r\n    },\r\n    set: function set$$1(mask) {\r\n      this._mask = mask;\r\n    }\r\n  }, {\r\n    key: 'prepare',\r\n    get: function get$$1() {\r\n      return this._prepare;\r\n    },\r\n    set: function set$$1(prepare) {\r\n      this._prepare = prepare;\r\n    }\r\n  }, {\r\n    key: 'validate',\r\n    get: function get$$1() {\r\n      return this._validate;\r\n    },\r\n    set: function set$$1(validate) {\r\n      this._validate = validate;\r\n    }\r\n  }, {\r\n    key: 'commit',\r\n    get: function get$$1() {\r\n      return this._commit;\r\n    },\r\n    set: function set$$1(commit) {\r\n      this._commit = commit;\r\n    }\r\n  }, {\r\n    key: 'value',\r\n    get: function get$$1() {\r\n      return this._value;\r\n    },\r\n    set: function set$$1(value) {\r\n      this.reset();\r\n      this.appendWithTail(value);\r\n      this.doCommit();\r\n    }\r\n  }, {\r\n    key: 'unmaskedValue',\r\n    get: function get$$1() {\r\n      return this._unmask();\r\n    },\r\n    set: function set$$1(value) {\r\n      this.reset();\r\n      this._append(value);\r\n      this.appendWithTail(\"\");\r\n      this.doCommit();\r\n    }\r\n  }, {\r\n    key: 'isComplete',\r\n    get: function get$$1() {\r\n      return true;\r\n    }\r\n  }]);\r\n  return Masked;\r\n}(), (_applyDecoratedDescriptor(_class.prototype, 'mask', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class.prototype, 'mask'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'prepare', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class.prototype, 'prepare'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'validate', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class.prototype, 'validate'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'commit', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class.prototype, 'commit'), _class.prototype)), _class);\r\n\r\nvar MaskedRegExp = function (_Masked) {\r\n  inherits(MaskedRegExp, _Masked);\r\n\r\n  function MaskedRegExp() {\r\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, MaskedRegExp);\r\n\r\n    opts.validate = function (value) {\r\n      return opts.mask.test(value);\r\n    };\r\n    return possibleConstructorReturn(this, _Masked.call(this, opts));\r\n  }\r\n\r\n  return MaskedRegExp;\r\n}(Masked);\r\n\r\nvar MaskedFunction = function (_Masked) {\r\n  inherits(MaskedFunction, _Masked);\r\n\r\n  function MaskedFunction() {\r\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, MaskedFunction);\r\n\r\n    opts.validate = opts.mask;\r\n    return possibleConstructorReturn(this, _Masked.call(this, opts));\r\n  }\r\n\r\n  return MaskedFunction;\r\n}(Masked);\r\n\r\nvar _class$2;\r\n\r\nfunction _applyDecoratedDescriptor$2(target, property, decorators, descriptor, context) {\r\n  var desc = {};\r\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\r\n    desc[key] = descriptor[key];\r\n  });\r\n  desc.enumerable = !!desc.enumerable;\r\n  desc.configurable = !!desc.configurable;\r\n\r\n  if ('value' in desc || desc.initializer) {\r\n    desc.writable = true;\r\n  }\r\n\r\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\r\n    return decorator(target, property, desc) || desc;\r\n  }, desc);\r\n\r\n  if (context && desc.initializer !== void 0) {\r\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\r\n    desc.initializer = undefined;\r\n  }\r\n\r\n  if (desc.initializer === void 0) {\r\n    Object['define' + 'Property'](target, property, desc);\r\n    desc = null;\r\n  }\r\n\r\n  return desc;\r\n}\r\n\r\nvar MaskedNumber = (_class$2 = function (_Masked) {\r\n  inherits(MaskedNumber, _Masked);\r\n\r\n  function MaskedNumber() {\r\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, MaskedNumber);\r\n\r\n    opts = _extends({}, MaskedNumber.DEFAULTS, opts);\r\n\r\n    var _this = possibleConstructorReturn(this, _Masked.call(this, opts));\r\n\r\n    delete _this.isInitialized;\r\n\r\n    var _opts = opts,\r\n        scale = _opts.scale,\r\n        radix = _opts.radix,\r\n        mapToRadix = _opts.mapToRadix,\r\n        min = _opts.min,\r\n        max = _opts.max,\r\n        signed = _opts.signed,\r\n        thousandsSeparator = _opts.thousandsSeparator,\r\n        postFormat = _opts.postFormat;\r\n\r\n\r\n    _this.min = min;\r\n    _this.max = max;\r\n    _this.scale = scale;\r\n    _this.radix = radix;\r\n    _this.mapToRadix = mapToRadix;\r\n    _this.signed = signed;\r\n    _this.thousandsSeparator = thousandsSeparator;\r\n    _this.postFormat = postFormat;\r\n\r\n    _this._updateNumberRegExp();\r\n\r\n    _this.isInitialized = true;\r\n    return _this;\r\n  }\r\n\r\n  MaskedNumber.prototype._updateNumberRegExp = function _updateNumberRegExp() {\r\n    // TODO refactor?\r\n    var regExpStrSoft = '^';\r\n    var regExpStr = '^';\r\n\r\n    if (this.signed) {\r\n      regExpStrSoft += '([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))';\r\n      regExpStr += '[+|\\\\-]?';\r\n    } else {\r\n      regExpStrSoft += '(0|([1-9]+\\\\d*))';\r\n    }\r\n    regExpStr += '\\\\d*';\r\n\r\n    if (this.scale) {\r\n      regExpStrSoft += '(' + this.radix + '\\\\d{0,' + this.scale + '})?';\r\n      regExpStr += '(' + this.radix + '\\\\d{0,' + this.scale + '})?';\r\n    }\r\n\r\n    regExpStrSoft += '$';\r\n    regExpStr += '$';\r\n\r\n    this._numberRegExpSoft = new RegExp(regExpStrSoft);\r\n    this._numberRegExp = new RegExp(regExpStr);\r\n  };\r\n\r\n  MaskedNumber.prototype.extractTail = function extractTail() {\r\n    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n    return this._removeThousandsSeparators(_Masked.prototype.extractTail.call(this, fromPos, toPos));\r\n  };\r\n\r\n  MaskedNumber.prototype._removeThousandsSeparators = function _removeThousandsSeparators(value) {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  };\r\n\r\n  MaskedNumber.prototype._insertThousandsSeparators = function _insertThousandsSeparators(value) {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    var parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  };\r\n\r\n  MaskedNumber.prototype.doPrepare = function doPrepare(str, soft) {\r\n    return _Masked.prototype.doPrepare.call(this, this._removeThousandsSeparators(str.replace(this._mapToRadixRegExp, this.radix)), soft);\r\n  };\r\n\r\n  MaskedNumber.prototype.appendWithTail = function appendWithTail(str, tail) {\r\n    var oldValueLength = this.value.length;\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    var removedSeparatorsCount = oldValueLength - this.value.length;\r\n\r\n    var appended = _Masked.prototype.appendWithTail.call(this, str, tail);\r\n\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n\r\n    var beforeTailPos = oldValueLength + appended - removedSeparatorsCount;\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n    var insertedSeparatorsBeforeTailCount = 0;\r\n    for (var pos = 0; pos <= beforeTailPos; ++pos) {\r\n      if (this.value[pos] === this.thousandsSeparator) {\r\n        ++insertedSeparatorsBeforeTailCount;\r\n        ++beforeTailPos;\r\n      }\r\n    }\r\n\r\n    return appended - removedSeparatorsCount + insertedSeparatorsBeforeTailCount;\r\n  };\r\n\r\n  MaskedNumber.prototype.nearestInputPos = function nearestInputPos(cursorPos) {\r\n    var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.LEFT;\r\n\r\n    if (!direction) return cursorPos;\r\n\r\n    var nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos += direction;\r\n    return cursorPos;\r\n  };\r\n\r\n  MaskedNumber.prototype.doValidate = function doValidate(soft) {\r\n    var regexp = soft ? this._numberRegExpSoft : this._numberRegExp;\r\n\r\n    // validate as string\r\n    var valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      var number = this.number;\r\n      valid = valid && !isNaN(number) && (\r\n      // check min bound for negative values\r\n      this.min == null || this.min >= 0 || this.min <= this.number) && (\r\n      // check max bound for positive values\r\n      this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && _Masked.prototype.doValidate.call(this, soft);\r\n  };\r\n\r\n  MaskedNumber.prototype.doCommit = function doCommit() {\r\n    var number = this.number;\r\n    var validnum = number;\r\n\r\n    // check bounds\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) {\r\n      this.unmaskedValue = '' + validnum;\r\n    }\r\n\r\n    var formatted = this.value;\r\n\r\n    if (this.postFormat.normalizeZeros) {\r\n      formatted = this._normalizeZeros(formatted);\r\n    }\r\n\r\n    if (this.postFormat.padFractionalZeros) {\r\n      formatted = this._padFractionalZeros(formatted);\r\n    }\r\n\r\n    this._value = formatted;\r\n    _Masked.prototype.doCommit.call(this);\r\n  };\r\n\r\n  MaskedNumber.prototype._normalizeZeros = function _normalizeZeros(value) {\r\n    var parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, function (match, sign, zeros, num) {\r\n      return sign + num;\r\n    });\r\n    // add leading zero\r\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1; // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  };\r\n\r\n  MaskedNumber.prototype._padFractionalZeros = function _padFractionalZeros(value) {\r\n    var parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  };\r\n\r\n  createClass(MaskedNumber, [{\r\n    key: 'number',\r\n    get: function get$$1() {\r\n      var numstr = this._removeThousandsSeparators(this._normalizeZeros(this.unmaskedValue)).replace(this.radix, '.');\r\n\r\n      return Number(numstr);\r\n    },\r\n    set: function set$$1(number) {\r\n      this.unmaskedValue = '' + number;\r\n    }\r\n  }, {\r\n    key: 'min',\r\n    get: function get$$1() {\r\n      return this._min;\r\n    },\r\n    set: function set$$1(min) {\r\n      this._min = min;\r\n    }\r\n  }, {\r\n    key: 'max',\r\n    get: function get$$1() {\r\n      return this._max;\r\n    },\r\n    set: function set$$1(max) {\r\n      this._max = max;\r\n    }\r\n  }, {\r\n    key: 'scale',\r\n    get: function get$$1() {\r\n      return this._scale;\r\n    },\r\n    set: function set$$1(scale) {\r\n      this._scale = scale;\r\n    }\r\n  }, {\r\n    key: 'radix',\r\n    get: function get$$1() {\r\n      return this._radix;\r\n    },\r\n    set: function set$$1(radix) {\r\n      this._radix = radix;\r\n      this._updateNumberRegExp();\r\n    }\r\n  }, {\r\n    key: 'signed',\r\n    get: function get$$1() {\r\n      return this._signed || this.min != null && this.min < 0 || this.max != null && this.max < 0;\r\n    },\r\n    set: function set$$1(signed) {\r\n      this._signed = signed;\r\n    }\r\n  }, {\r\n    key: 'postFormat',\r\n    get: function get$$1() {\r\n      return this._postFormat;\r\n    },\r\n    set: function set$$1(postFormat) {\r\n      this._postFormat = _extends({}, MaskedNumber.DEFAULTS.postFormat, postFormat);\r\n    }\r\n  }, {\r\n    key: 'mapToRadix',\r\n    get: function get$$1() {\r\n      return this._mapToRadix;\r\n    },\r\n    set: function set$$1(mapToRadix) {\r\n      this._mapToRadix = mapToRadix;\r\n      this._mapToRadixRegExp = new RegExp('[' + mapToRadix.map(escapeRegExp).join('') + ']', 'g');\r\n    }\r\n  }, {\r\n    key: 'thousandsSeparator',\r\n    get: function get$$1() {\r\n      return this._thousandsSeparator;\r\n    },\r\n    set: function set$$1(thousandsSeparator) {\r\n      this._thousandsSeparator = thousandsSeparator;\r\n      this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(thousandsSeparator), 'g');\r\n    }\r\n  }]);\r\n  return MaskedNumber;\r\n}(Masked), (_applyDecoratedDescriptor$2(_class$2.prototype, 'min', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'min'), _class$2.prototype), _applyDecoratedDescriptor$2(_class$2.prototype, 'max', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'max'), _class$2.prototype), _applyDecoratedDescriptor$2(_class$2.prototype, 'scale', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'scale'), _class$2.prototype), _applyDecoratedDescriptor$2(_class$2.prototype, 'radix', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'radix'), _class$2.prototype), _applyDecoratedDescriptor$2(_class$2.prototype, 'signed', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'signed'), _class$2.prototype), _applyDecoratedDescriptor$2(_class$2.prototype, 'postFormat', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'postFormat'), _class$2.prototype), _applyDecoratedDescriptor$2(_class$2.prototype, 'mapToRadix', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'mapToRadix'), _class$2.prototype), _applyDecoratedDescriptor$2(_class$2.prototype, 'thousandsSeparator', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$2.prototype, 'thousandsSeparator'), _class$2.prototype)), _class$2);\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: ['.'],\r\n  scale: 2,\r\n  postFormat: {\r\n    normalizeZeros: true\r\n  }\r\n};\r\n\r\nfunction maskedClass(mask) {\r\n  if (mask instanceof RegExp) return MaskedRegExp;\r\n  if (isString(mask)) return IMask.MaskedPattern;\r\n  if (mask.prototype instanceof Masked) return mask;\r\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return MaskedNumber;\r\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\r\n  if (mask instanceof Function) return MaskedFunction;\r\n\r\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\r\n  return Masked;\r\n}\r\n\r\nfunction createMask(opts) {\r\n  opts = _extends({}, opts); // clone\r\n  var mask = opts.mask;\r\n\r\n  if (mask instanceof Masked) return mask;\r\n\r\n  var MaskedClass = maskedClass(mask);\r\n  return new MaskedClass(opts);\r\n}\r\n\r\nvar PatternDefinition = function () {\r\n  function PatternDefinition(opts) {\r\n    classCallCheck(this, PatternDefinition);\r\n\r\n    _extends(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  PatternDefinition.prototype.reset = function reset() {\r\n    this.isHollow = false;\r\n    if (this._masked) this._masked.reset();\r\n  };\r\n\r\n  PatternDefinition.prototype.resolve = function resolve(ch) {\r\n    if (!this._masked) return false;\r\n    // TODO seems strange\r\n    this._masked.value = ch;\r\n    return this._masked.value;\r\n  };\r\n\r\n  createClass(PatternDefinition, [{\r\n    key: 'isInput',\r\n    get: function get$$1() {\r\n      return this.type === PatternDefinition.TYPES.INPUT;\r\n    }\r\n  }, {\r\n    key: 'isHiddenHollow',\r\n    get: function get$$1() {\r\n      return this.isHollow && this.optional;\r\n    }\r\n  }]);\r\n  return PatternDefinition;\r\n}();\r\n\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/, // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n\r\nvar PatternGroup = function () {\r\n  function PatternGroup(masked, _ref) {\r\n    var name = _ref.name,\r\n        offset = _ref.offset,\r\n        mask = _ref.mask,\r\n        validate = _ref.validate;\r\n    classCallCheck(this, PatternGroup);\r\n\r\n    this.masked = masked;\r\n    this.name = name;\r\n    this.offset = offset;\r\n    this.mask = mask;\r\n    this.validate = validate || function () {\r\n      return true;\r\n    };\r\n  }\r\n\r\n  PatternGroup.prototype.doValidate = function doValidate(soft) {\r\n    return this.validate(this.value, this, soft);\r\n  };\r\n\r\n  createClass(PatternGroup, [{\r\n    key: 'value',\r\n    get: function get$$1() {\r\n      return this.masked.value.slice(this.masked.mapDefIndexToPos(this.offset), this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n    }\r\n  }, {\r\n    key: 'unmaskedValue',\r\n    get: function get$$1() {\r\n      return this.masked.extractInput(this.masked.mapDefIndexToPos(this.offset), this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n    }\r\n  }]);\r\n  return PatternGroup;\r\n}();\r\n\r\nvar RangeGroup = function () {\r\n  function RangeGroup(_ref2) {\r\n    var from = _ref2[0],\r\n        to = _ref2[1];\r\n    var maxlen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (to + '').length;\r\n    classCallCheck(this, RangeGroup);\r\n\r\n    this._from = from;\r\n    this._to = to;\r\n    this._maxLength = maxlen;\r\n    this.validate = this.validate.bind(this);\r\n\r\n    this._update();\r\n  }\r\n\r\n  RangeGroup.prototype._update = function _update() {\r\n    this._maxLength = Math.max(this._maxLength, (this.to + '').length);\r\n    this.mask = '0'.repeat(this._maxLength);\r\n  };\r\n\r\n  RangeGroup.prototype.validate = function validate(str) {\r\n    var minstr = '';\r\n    var maxstr = '';\r\n\r\n    var _str$match = str.match(/^(\\D*)(\\d*)(\\D*)/),\r\n        placeholder = _str$match[1],\r\n        num = _str$match[2];\r\n\r\n    if (num) {\r\n      minstr = '0'.repeat(placeholder.length) + num;\r\n      maxstr = '9'.repeat(placeholder.length) + num;\r\n    }\r\n\r\n    var firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    minstr = minstr.padEnd(this._maxLength, '0');\r\n    maxstr = maxstr.padEnd(this._maxLength, '9');\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to;\r\n  };\r\n\r\n  createClass(RangeGroup, [{\r\n    key: 'to',\r\n    get: function get$$1() {\r\n      return this._to;\r\n    },\r\n    set: function set$$1(to) {\r\n      this._to = to;\r\n      this._update();\r\n    }\r\n  }, {\r\n    key: 'from',\r\n    get: function get$$1() {\r\n      return this._from;\r\n    },\r\n    set: function set$$1(from) {\r\n      this._from = from;\r\n      this._update();\r\n    }\r\n  }, {\r\n    key: 'maxLength',\r\n    get: function get$$1() {\r\n      return this._maxLength;\r\n    },\r\n    set: function set$$1(maxLength) {\r\n      this._maxLength = maxLength;\r\n      this._update();\r\n    }\r\n  }, {\r\n    key: '_matchFrom',\r\n    get: function get$$1() {\r\n      return this.maxLength - (this.from + '').length;\r\n    }\r\n  }]);\r\n  return RangeGroup;\r\n}();\r\n\r\nfunction EnumGroup(enums) {\r\n  return {\r\n    mask: '*'.repeat(enums[0].length),\r\n    validate: function validate(value, group) {\r\n      return enums.some(function (e) {\r\n        return e.indexOf(group.unmaskedValue) >= 0;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nPatternGroup.Range = RangeGroup;\r\nPatternGroup.Enum = EnumGroup;\r\n\r\nvar _class$1;\r\n\r\nfunction _applyDecoratedDescriptor$1(target, property, decorators, descriptor, context) {\r\n  var desc = {};\r\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\r\n    desc[key] = descriptor[key];\r\n  });\r\n  desc.enumerable = !!desc.enumerable;\r\n  desc.configurable = !!desc.configurable;\r\n\r\n  if ('value' in desc || desc.initializer) {\r\n    desc.writable = true;\r\n  }\r\n\r\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\r\n    return decorator(target, property, desc) || desc;\r\n  }, desc);\r\n\r\n  if (context && desc.initializer !== void 0) {\r\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\r\n    desc.initializer = undefined;\r\n  }\r\n\r\n  if (desc.initializer === void 0) {\r\n    Object['define' + 'Property'](target, property, desc);\r\n    desc = null;\r\n  }\r\n\r\n  return desc;\r\n}\r\n\r\nvar MaskedPattern = (_class$1 = function (_Masked) {\r\n  inherits(MaskedPattern, _Masked);\r\n\r\n  function MaskedPattern() {\r\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, MaskedPattern);\r\n    var definitions = opts.definitions,\r\n        placeholder = opts.placeholder,\r\n        groups = opts.groups;\r\n\r\n    var _this = possibleConstructorReturn(this, _Masked.call(this, opts));\r\n\r\n    delete _this.isInitialized;\r\n\r\n    _this.placeholder = placeholder;\r\n    _this.definitions = definitions;\r\n    _this.groups = groups;\r\n\r\n    _this.isInitialized = true;\r\n    return _this;\r\n  }\r\n\r\n  MaskedPattern.prototype._updateMask = function _updateMask() {\r\n    var _this2 = this;\r\n\r\n    var defs = this._definitions;\r\n    this._charDefs = [];\r\n    this._groupDefs = [];\r\n\r\n    var pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    var unmaskingBlock = false;\r\n    var optionalBlock = false;\r\n    var stopAlign = false;\r\n\r\n    var _loop = function _loop(_i) {\r\n      if (_this2._groups) {\r\n        var p = pattern.slice(_i);\r\n        var gNames = Object.keys(_this2._groups).filter(function (gName) {\r\n          return p.indexOf(gName) === 0;\r\n        });\r\n        // order by key length\r\n        gNames.sort(function (a, b) {\r\n          return b.length - a.length;\r\n        });\r\n        // use group name with max length\r\n        var gName = gNames[0];\r\n        if (gName) {\r\n          var group = _this2._groups[gName];\r\n          _this2._groupDefs.push(new PatternGroup(_this2, {\r\n            name: gName,\r\n            offset: _this2._charDefs.length,\r\n            mask: group.mask,\r\n            validate: group.validate\r\n          }));\r\n          pattern = pattern.replace(gName, group.mask);\r\n        }\r\n      }\r\n\r\n      var char = pattern[_i];\r\n      var type = !unmaskingBlock && char in defs ? PatternDefinition.TYPES.INPUT : PatternDefinition.TYPES.FIXED;\r\n      var unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      var optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        stopAlign = true;\r\n        return 'continue';\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        return 'continue';\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        return 'continue';\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++_i;\r\n        char = pattern[_i];\r\n        // TODO validation\r\n        if (!char) return 'break';\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      _this2._charDefs.push(new PatternDefinition({\r\n        char: char,\r\n        type: type,\r\n        optional: optional,\r\n        stopAlign: stopAlign,\r\n        mask: unmasking && (type === PatternDefinition.TYPES.INPUT ? defs[char] : function (value) {\r\n          return value === char;\r\n        })\r\n      }));\r\n\r\n      stopAlign = false;\r\n      i = _i;\r\n    };\r\n\r\n    _loop2: for (var i = 0; i < pattern.length; ++i) {\r\n      var _ret = _loop(i);\r\n\r\n      switch (_ret) {\r\n        case 'continue':\r\n          continue;\r\n\r\n        case 'break':\r\n          break _loop2;}\r\n    }\r\n  };\r\n\r\n  MaskedPattern.prototype.doValidate = function doValidate(soft) {\r\n    return this._groupDefs.every(function (g) {\r\n      return g.doValidate(soft);\r\n    }) && _Masked.prototype.doValidate.call(this, soft);\r\n  };\r\n\r\n  MaskedPattern.prototype.clone = function clone() {\r\n    var _this3 = this;\r\n\r\n    var m = new MaskedPattern(this);\r\n    m._value = this.value;\r\n    m._charDefs.forEach(function (d, i) {\r\n      return _extends(d, _this3._charDefs[i]);\r\n    });\r\n    m._groupDefs.forEach(function (d, i) {\r\n      return _extends(d, _this3._groupDefs[i]);\r\n    });\r\n    return m;\r\n  };\r\n\r\n  MaskedPattern.prototype.reset = function reset() {\r\n    _Masked.prototype.reset.call(this);\r\n    this._charDefs.forEach(function (d) {\r\n      delete d.isHollow;\r\n    });\r\n  };\r\n\r\n  MaskedPattern.prototype.hiddenHollowsBefore = function hiddenHollowsBefore(defIndex) {\r\n    return this._charDefs.slice(0, defIndex).filter(function (d) {\r\n      return d.isHiddenHollow;\r\n    }).length;\r\n  };\r\n\r\n  MaskedPattern.prototype.mapDefIndexToPos = function mapDefIndexToPos(defIndex) {\r\n    if (defIndex == null) return;\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  };\r\n\r\n  MaskedPattern.prototype.mapPosToDefIndex = function mapPosToDefIndex(pos) {\r\n    if (pos == null) return;\r\n    var defIndex = pos;\r\n    for (var di = 0; di < this._charDefs.length; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  };\r\n\r\n  MaskedPattern.prototype._unmask = function _unmask() {\r\n    var str = this.value;\r\n    var unmasked = '';\r\n\r\n    for (var ci = 0, di = 0; ci < str.length && di < this._charDefs.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (def.isHiddenHollow) continue;\r\n      if (def.mask && !def.isHollow) unmasked += ch;\r\n      ++ci;\r\n    }\r\n\r\n    return unmasked;\r\n  };\r\n\r\n  MaskedPattern.prototype._appendTail = function _appendTail(tail) {\r\n    return (!tail || this._appendChunks(tail)) && this._appendPlaceholder();\r\n  };\r\n\r\n  MaskedPattern.prototype._append = function _append(str, soft) {\r\n    var oldValueLength = this.value.length;\r\n\r\n    for (var ci = 0, di = this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (!def) return false;\r\n\r\n      // reset\r\n      def.isHollow = false;\r\n\r\n      var resolved = void 0,\r\n          skipped = void 0;\r\n      var chres = conform(def.resolve(ch), ch);\r\n\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          this._value += chres;\r\n          if (!this.doValidate()) {\r\n            chres = '';\r\n            this._value = this.value.slice(0, -1);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        // if ok - next di\r\n        if (!chres) {\r\n          if (!def.optional && !soft) {\r\n            this._value += this.placeholder.char;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.mask || soft);\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n  };\r\n\r\n  MaskedPattern.prototype._appendChunks = function _appendChunks(chunks, soft) {\r\n    for (var ci = 0; ci < chunks.length; ++ci) {\r\n      var _chunks$ci = chunks[ci],\r\n          fromDefIndex = _chunks$ci[0],\r\n          input = _chunks$ci[1];\r\n\r\n      if (fromDefIndex != null) this._appendPlaceholder(fromDefIndex);\r\n      if (this._append(input, soft) === false) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  MaskedPattern.prototype.extractTail = function extractTail(fromPos, toPos) {\r\n    return this.extractInputChunks(fromPos, toPos);\r\n  };\r\n\r\n  MaskedPattern.prototype.extractInput = function extractInput() {\r\n    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n    // TODO fromPos === toPos\r\n    var str = this.value;\r\n    var input = '';\r\n\r\n    var toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (var ci = fromPos, di = this.mapPosToDefIndex(fromPos); ci < toPos && ci < str.length && di < toDefIndex; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  };\r\n\r\n  MaskedPattern.prototype.extractInputChunks = function extractInputChunks() {\r\n    var _this4 = this;\r\n\r\n    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n    // TODO fromPos === toPos\r\n    var fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    var toDefIndex = this.mapPosToDefIndex(toPos);\r\n    var stopDefIndices = this._charDefs.map(function (d, i) {\r\n      return [d, i];\r\n    }).slice(fromDefIndex, toDefIndex).filter(function (_ref) {\r\n      var d = _ref[0];\r\n      return d.stopAlign;\r\n    }).map(function (_ref2) {\r\n      var i = _ref2[1];\r\n      return i;\r\n    });\r\n\r\n    var stops = [fromDefIndex].concat(stopDefIndices, [toDefIndex]);\r\n\r\n    return stops.map(function (s, i) {\r\n      return [stopDefIndices.indexOf(s) >= 0 ? s : null, _this4.extractInput(_this4.mapDefIndexToPos(s), _this4.mapDefIndexToPos(stops[++i]))];\r\n    }).filter(function (_ref3) {\r\n      var stop = _ref3[0],\r\n          input = _ref3[1];\r\n      return stop != null || input;\r\n    });\r\n  };\r\n\r\n  MaskedPattern.prototype._appendPlaceholder = function _appendPlaceholder(toDefIndex) {\r\n    var maxDefIndex = toDefIndex || this._charDefs.length;\r\n    for (var di = this.mapPosToDefIndex(this.value.length); di < maxDefIndex; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (def.isInput) def.isHollow = true;\r\n\r\n      if (!this.placeholder.lazy || toDefIndex) {\r\n        this._value += !def.isInput ? def.char : !def.optional ? this.placeholder.char : '';\r\n      }\r\n    }\r\n  };\r\n\r\n  MaskedPattern.prototype.clear = function clear() {\r\n    var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n    var fromDefIndex = this.mapPosToDefIndex(from);\r\n    var toDefIndex = this.mapPosToDefIndex(to);\r\n    this._charDefs.slice(fromDefIndex, toDefIndex).forEach(function (d) {\r\n      return d.reset();\r\n    });\r\n  };\r\n\r\n  MaskedPattern.prototype.nearestInputPos = function nearestInputPos(cursorPos) {\r\n    var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.LEFT;\r\n\r\n    if (!direction) return cursorPos;\r\n\r\n    var initialDefIndex = this.mapPosToDefIndex(cursorPos);\r\n    var di = initialDefIndex;\r\n\r\n    var firstInputIndex = void 0,\r\n        firstFilledInputIndex = void 0,\r\n        firstVisibleHollowIndex = void 0,\r\n        nextdi = void 0;\r\n\r\n    // search forward\r\n    for (nextdi = indexInDirection(di, direction); 0 <= nextdi && nextdi < this._charDefs.length; di += direction, nextdi += direction) {\r\n      var nextDef = this._charDefs[nextdi];\r\n      if (firstInputIndex == null && nextDef.isInput) firstInputIndex = di;\r\n      if (firstVisibleHollowIndex == null && nextDef.isHollow && !nextDef.isHiddenHollow) firstVisibleHollowIndex = di;\r\n      if (nextDef.isInput && !nextDef.isHollow) {\r\n        firstFilledInputIndex = di;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n      // search backwards\r\n      direction = -direction;\r\n      var overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (nextdi = indexInDirection(di, direction); 0 <= nextdi && nextdi < this._charDefs.length; di += direction, nextdi += direction) {\r\n        var _nextDef = this._charDefs[nextdi];\r\n        if (_nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (_nextDef.isHollow && !_nextDef.isHiddenHollow) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || nextdi >= this._charDefs.length;\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ? firstVisibleHollowIndex : firstInputIndex;\r\n    }\r\n\r\n    return this.mapDefIndexToPos(di);\r\n  };\r\n\r\n  MaskedPattern.prototype.group = function group(name) {\r\n    return this.groupsByName(name)[0];\r\n  };\r\n\r\n  MaskedPattern.prototype.groupsByName = function groupsByName(name) {\r\n    return this._groupDefs.filter(function (g) {\r\n      return g.name === name;\r\n    });\r\n  };\r\n\r\n  createClass(MaskedPattern, [{\r\n    key: 'placeholder',\r\n    get: function get$$1() {\r\n      return this._placeholder;\r\n    },\r\n    set: function set$$1(ph) {\r\n      this._placeholder = _extends({}, MaskedPattern.DEFAULT_PLACEHOLDER, ph);\r\n    }\r\n  }, {\r\n    key: 'definitions',\r\n    get: function get$$1() {\r\n      return this._definitions;\r\n    },\r\n    set: function set$$1(defs) {\r\n      defs = _extends({}, PatternDefinition.DEFAULTS, defs);\r\n\r\n      this._definitions = defs;\r\n      this._updateMask();\r\n    }\r\n  }, {\r\n    key: 'mask',\r\n    get: function get$$1() {\r\n      return this._mask;\r\n    },\r\n    set: function set$$1(mask) {\r\n      this._mask = mask;\r\n      this._updateMask();\r\n    }\r\n  }, {\r\n    key: 'isComplete',\r\n    get: function get$$1() {\r\n      var _this5 = this;\r\n\r\n      return !this._charDefs.some(function (d, i) {\r\n        return d.isInput && !d.optional && (d.isHollow || !_this5.extractInput(i, i + 1));\r\n      });\r\n    }\r\n  }, {\r\n    key: 'groups',\r\n    get: function get$$1() {\r\n      return this._groups;\r\n    },\r\n    set: function set$$1(groups) {\r\n      this._groups = groups;\r\n      this._updateMask();\r\n    }\r\n  }]);\r\n  return MaskedPattern;\r\n}(Masked), (_applyDecoratedDescriptor$1(_class$1.prototype, 'placeholder', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$1.prototype, 'placeholder'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'definitions', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$1.prototype, 'definitions'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'mask', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$1.prototype, 'mask'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'groups', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$1.prototype, 'groups'), _class$1.prototype)), _class$1);\r\nMaskedPattern.DEFAULT_PLACEHOLDER = {\r\n  lazy: true,\r\n  char: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.Definition = PatternDefinition;\r\nMaskedPattern.Group = PatternGroup;\r\n\r\nvar _class$3;\r\n\r\nfunction _applyDecoratedDescriptor$3(target, property, decorators, descriptor, context) {\r\n  var desc = {};\r\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\r\n    desc[key] = descriptor[key];\r\n  });\r\n  desc.enumerable = !!desc.enumerable;\r\n  desc.configurable = !!desc.configurable;\r\n\r\n  if ('value' in desc || desc.initializer) {\r\n    desc.writable = true;\r\n  }\r\n\r\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\r\n    return decorator(target, property, desc) || desc;\r\n  }, desc);\r\n\r\n  if (context && desc.initializer !== void 0) {\r\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\r\n    desc.initializer = undefined;\r\n  }\r\n\r\n  if (desc.initializer === void 0) {\r\n    Object['define' + 'Property'](target, property, desc);\r\n    desc = null;\r\n  }\r\n\r\n  return desc;\r\n}\r\n\r\nvar MaskedDate = (_class$3 = function (_MaskedPattern) {\r\n  inherits(MaskedDate, _MaskedPattern);\r\n\r\n  function MaskedDate() {\r\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, MaskedDate);\r\n\r\n    var groups = opts.groups;\r\n    opts = _extends({}, MaskedDate.DEFAULTS, opts);\r\n    var _opts = opts,\r\n        min = _opts.min,\r\n        max = _opts.max,\r\n        format = _opts.format,\r\n        parse = _opts.parse;\r\n\r\n\r\n    opts.groups = _extends({}, MaskedDate.DEFAULTS.groups);\r\n    if (opts.groups.Y) {\r\n      // adjust year group\r\n      if (min) opts.groups.Y.from = min.getFullYear();\r\n      if (max) opts.groups.Y.to = max.getFullYear();\r\n    }\r\n\r\n    _extends(opts.groups, groups);\r\n\r\n    opts.mask = opts.pattern;\r\n    delete opts.pattern;\r\n\r\n    var _this = possibleConstructorReturn(this, _MaskedPattern.call(this, opts));\r\n\r\n    delete _this.isInitialized;\r\n\r\n    _this.min = min;\r\n    _this.max = max;\r\n    _this.format = format;\r\n    _this.parse = parse;\r\n\r\n    _this.isInitialized = true;\r\n    return _this;\r\n  }\r\n\r\n  MaskedDate.prototype.doValidate = function doValidate(soft) {\r\n    var valid = _MaskedPattern.prototype.doValidate.call(this, soft);\r\n    var date = this.date;\r\n\r\n    return valid && (!this.isComplete || this.isDateExist(this.value) && date && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\r\n  };\r\n\r\n  MaskedDate.prototype.isDateExist = function isDateExist(str) {\r\n    return this.format(this.parse(str)) === str;\r\n  };\r\n\r\n  createClass(MaskedDate, [{\r\n    key: 'date',\r\n    get: function get$$1() {\r\n      return this.isComplete ? this.parse(this.value) : null;\r\n    },\r\n    set: function set$$1(date) {\r\n      this.value = this.format(date);\r\n    }\r\n  }, {\r\n    key: 'min',\r\n    get: function get$$1() {\r\n      return this._min;\r\n    },\r\n    set: function set$$1(min) {\r\n      this._min = min;\r\n    }\r\n  }, {\r\n    key: 'max',\r\n    get: function get$$1() {\r\n      return this._max;\r\n    },\r\n    set: function set$$1(max) {\r\n      this._max = max;\r\n    }\r\n  }, {\r\n    key: 'mask',\r\n    get: function get$$1() {\r\n      return _MaskedPattern.prototype.mask;\r\n    }\r\n\r\n    // check mask on set\r\n    ,\r\n    set: function set$$1(mask) {\r\n      if (mask === Date) return;\r\n      _MaskedPattern.prototype.mask = mask;\r\n    }\r\n  }, {\r\n    key: 'pattern',\r\n    get: function get$$1() {\r\n      return this.mask;\r\n    },\r\n    set: function set$$1(pattern) {\r\n      this.mask = pattern;\r\n    }\r\n  }]);\r\n  return MaskedDate;\r\n}(MaskedPattern), (_applyDecoratedDescriptor$3(_class$3.prototype, 'min', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$3.prototype, 'min'), _class$3.prototype), _applyDecoratedDescriptor$3(_class$3.prototype, 'max', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$3.prototype, 'max'), _class$3.prototype), _applyDecoratedDescriptor$3(_class$3.prototype, 'pattern', [refreshValueOnSet], Object.getOwnPropertyDescriptor(_class$3.prototype, 'pattern'), _class$3.prototype)), _class$3);\r\nMaskedDate.DEFAULTS = {\r\n  pattern: 'd{.}`m{.}`Y',\r\n  format: function format(date) {\r\n    var day = ('' + date.getDate()).padStart(2, '0');\r\n    var month = ('' + (date.getMonth() + 1)).padStart(2, '0');\r\n    var year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: function parse(str) {\r\n    var _str$split = str.split('.'),\r\n        day = _str$split[0],\r\n        month = _str$split[1],\r\n        year = _str$split[2];\r\n\r\n    return new Date(year, month - 1, day);\r\n  },\r\n  groups: {\r\n    d: new PatternGroup.Range([1, 31]),\r\n    m: new PatternGroup.Range([1, 12]),\r\n    Y: new PatternGroup.Range([1900, 9999])\r\n  }\r\n};\r\n\r\nvar ActionDetails = function () {\r\n  function ActionDetails(value, cursorPos, oldValue, oldSelection) {\r\n    classCallCheck(this, ActionDetails);\r\n\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n  }\r\n\r\n  createClass(ActionDetails, [{\r\n    key: 'startChangePos',\r\n    get: function get$$1() {\r\n      return Math.min(this.cursorPos, this.oldSelection.start);\r\n    }\r\n  }, {\r\n    key: 'insertedCount',\r\n    get: function get$$1() {\r\n      return this.cursorPos - this.startChangePos;\r\n    }\r\n  }, {\r\n    key: 'inserted',\r\n    get: function get$$1() {\r\n      return this.value.substr(this.startChangePos, this.insertedCount);\r\n    }\r\n  }, {\r\n    key: 'removedCount',\r\n    get: function get$$1() {\r\n      // Math.max for opposite operation\r\n      return Math.max(this.oldSelection.end - this.startChangePos ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n    }\r\n  }, {\r\n    key: 'removed',\r\n    get: function get$$1() {\r\n      return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n    }\r\n  }, {\r\n    key: 'head',\r\n    get: function get$$1() {\r\n      return this.value.substring(0, this.startChangePos);\r\n    }\r\n  }, {\r\n    key: 'tail',\r\n    get: function get$$1() {\r\n      this.value.substring(this.startChangePos + this.insertedCount);\r\n    }\r\n  }, {\r\n    key: 'removeDirection',\r\n    get: function get$$1() {\r\n      return this.removedCount && (this.oldSelection.end === this.cursorPos || this.insertedCount ? DIRECTION.RIGHT : DIRECTION.LEFT);\r\n    }\r\n  }]);\r\n  return ActionDetails;\r\n}();\r\n\r\nvar InputMask = function () {\r\n  function InputMask(el, opts) {\r\n    classCallCheck(this, InputMask);\r\n\r\n    this.el = el;\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this._saveSelection = this._saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n    this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n\r\n    this.bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  InputMask.prototype.bindEvents = function bindEvents() {\r\n    this.el.addEventListener('keydown', this._saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n    this.el.addEventListener('click', this._alignCursorFriendly);\r\n    this.el.addEventListener('change', this._onChange);\r\n  };\r\n\r\n  InputMask.prototype.unbindEvents = function unbindEvents() {\r\n    this.el.removeEventListener('keydown', this._saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n    this.el.removeEventListener('click', this._alignCursorFriendly);\r\n    this.el.removeEventListener('change', this._onChange);\r\n  };\r\n\r\n  InputMask.prototype.fireEvent = function fireEvent(ev) {\r\n    var listeners = this._listeners[ev] || [];\r\n    listeners.forEach(function (l) {\r\n      return l();\r\n    });\r\n  };\r\n\r\n  InputMask.prototype._saveSelection = function _saveSelection() /* ev */{\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  };\r\n\r\n  InputMask.prototype.updateValue = function updateValue() {\r\n    this.masked.value = this.el.value;\r\n  };\r\n\r\n  InputMask.prototype.updateControl = function updateControl() {\r\n    var newUnmaskedValue = this.masked.unmaskedValue;\r\n    var newValue = this.masked.value;\r\n    var isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  };\r\n\r\n  InputMask.prototype.updateOptions = function updateOptions(opts) {\r\n    var _this = this;\r\n\r\n    var mask = opts.mask;\r\n    if (mask) this.mask = mask;\r\n\r\n    this.masked.withValueRefresh(function () {\r\n      for (var k in opts) {\r\n        if (k === 'mask') continue;\r\n        _this.masked[k] = opts[k];\r\n      }\r\n    });\r\n\r\n    this.updateControl();\r\n  };\r\n\r\n  InputMask.prototype.updateCursor = function updateCursor(cursorPos) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  };\r\n\r\n  InputMask.prototype._delayUpdateCursor = function _delayUpdateCursor(cursorPos) {\r\n    var _this2 = this;\r\n\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(function () {\r\n      _this2.cursorPos = _this2._changingCursorPos;\r\n      _this2._abortUpdateCursor();\r\n    }, 10);\r\n  };\r\n\r\n  InputMask.prototype._fireChangeEvents = function _fireChangeEvents() {\r\n    this.fireEvent('accept');\r\n    if (this.masked.isComplete) this.fireEvent('complete');\r\n  };\r\n\r\n  InputMask.prototype._abortUpdateCursor = function _abortUpdateCursor() {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  };\r\n\r\n  InputMask.prototype._alignCursor = function _alignCursor() {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos);\r\n  };\r\n\r\n  InputMask.prototype._alignCursorFriendly = function _alignCursorFriendly() {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this._alignCursor();\r\n  };\r\n\r\n  InputMask.prototype.on = function on(ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  };\r\n\r\n  InputMask.prototype.off = function off(ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    var hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  };\r\n\r\n  InputMask.prototype._onInput = function _onInput() {\r\n    this._abortUpdateCursor();\r\n\r\n    var details = new ActionDetails(\r\n    // new state\r\n    this.el.value, this.cursorPos,\r\n    // old state\r\n    this.value, this._selection);\r\n\r\n    var tailPos = details.startChangePos + details.removed.length;\r\n    var tail = this.masked.extractTail(tailPos);\r\n\r\n    var lastInputPos = this.masked.nearestInputPos(details.startChangePos, details.removeDirection);\r\n    this.masked.clear(lastInputPos);\r\n    var insertedCount = this.masked.appendWithTail(details.inserted, tail);\r\n\r\n    var cursorPos = this.masked.nearestInputPos(lastInputPos + insertedCount, details.removeDirection);\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  };\r\n\r\n  InputMask.prototype._onChange = function _onChange() {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.doCommit();\r\n    this.updateControl();\r\n  };\r\n\r\n  InputMask.prototype._onDrop = function _onDrop(ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  };\r\n\r\n  InputMask.prototype.destroy = function destroy() {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  };\r\n\r\n  createClass(InputMask, [{\r\n    key: 'mask',\r\n    get: function get$$1() {\r\n      return this.masked.mask;\r\n    },\r\n    set: function set$$1(mask) {\r\n      if (mask == null || mask === this.masked.mask) return;\r\n\r\n      if (this.masked.constructor === maskedClass(mask)) {\r\n        this.masked.mask = mask;\r\n        return;\r\n      }\r\n\r\n      var masked = createMask({ mask: mask });\r\n      masked.unmaskedValue = this.masked.unmaskedValue;\r\n      this.masked = masked;\r\n    }\r\n  }, {\r\n    key: 'value',\r\n    get: function get$$1() {\r\n      return this._value;\r\n    },\r\n    set: function set$$1(str) {\r\n      this.masked.value = str;\r\n      this.updateControl();\r\n      this._alignCursor();\r\n    }\r\n  }, {\r\n    key: 'unmaskedValue',\r\n    get: function get$$1() {\r\n      return this._unmaskedValue;\r\n    },\r\n    set: function set$$1(str) {\r\n      this.masked.unmaskedValue = str;\r\n      this.updateControl();\r\n      this._alignCursor();\r\n    }\r\n  }, {\r\n    key: 'selectionStart',\r\n    get: function get$$1() {\r\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\r\n    }\r\n  }, {\r\n    key: 'cursorPos',\r\n    get: function get$$1() {\r\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\r\n    },\r\n    set: function set$$1(pos) {\r\n      if (this.el !== document.activeElement) return;\r\n\r\n      this.el.setSelectionRange(pos, pos);\r\n      this._saveSelection();\r\n    }\r\n  }]);\r\n  return InputMask;\r\n}();\r\n\r\nfunction IMask$1(el) {\r\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n  // currently available only for input elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\nIMask$1.InputMask = InputMask;\r\n\r\nIMask$1.Masked = Masked;\r\nIMask$1.MaskedPattern = MaskedPattern;\r\nIMask$1.MaskedNumber = MaskedNumber;\r\nIMask$1.MaskedDate = MaskedDate;\r\nIMask$1.MaskedRegExp = MaskedRegExp;\r\nIMask$1.MaskedFunction = MaskedFunction;\r\n\r\nwindow.IMask = IMask$1;\r\n\r\nexport default IMask$1;\r\n//# sourceMappingURL=imask.es.js.map\r\n"],"sourceRoot":""}